let e;!function(e){e.SUCCESS="success",e.FAILURE="failure",e.PENDING="pending",e.GAMEOVER="game-over"}(e||(e={}));class t{cardSelected(t){if(null==t)throw new Error("Card is not defined.");if(this.isCardNotPartGame(t))throw new Error("This card is not part of the current game.");if(this.isCardSolved(t))throw new Error("This card has already been solved.");const n=this.playHistory[this.playHistory.length-1];let r;console.debug("last play",n),r=n&&n.result===e.PENDING?n.card===t?e.SUCCESS:e.FAILURE:e.PENDING;const s={card:t,result:r,time:new Date};return this.playHistory.push(s),console.debug("current play",s),r===e.SUCCESS&&(this.solvedValues.push(t),this.isGameEnded())?e.GAMEOVER:r}isCardNotPartGame(e){return!this.initalValues.includes(e)}isCardSolved(e){const t=this.initalValues.filter((t=>t===e)).length;return this.solvedValues.filter((t=>t===e)).length===t}isGameEnded(){return this.solvedValues.length===this.initalValues.length}doubleAndShuffle(e){return[...e,...e].sort((()=>Math.random()-.5))}constructor(e){this.initalValues=e,this.solvedValues=[],this.cards=this.doubleAndShuffle(e),this.playHistory=[]}}var n,r,s;function a(e,t){const n=Math.random()*(t-e)+e;return Math.floor(n)}function i(e,t){const n=document.createElement(e);return n.classList.add(...t),n}let o;function l(e,t){for(const n of t)null==n||n.classList.add(e)}function d(e,t){for(const n of t)null==n||n.classList.remove(e)}s=function(e,t=0,n=101){const r=[];for(;r.length<e;)r.push(a(t,n));return r},(r="generateRandomNumbers")in(n=t)?Object.defineProperty(n,r,{value:s,enumerable:!0,configurable:!0,writable:!0}):n[r]=s;const c=function(t){const n=t.cards.map((n=>function(e,t){const n=i("button",["card"]);n.addEventListener("click",t,!0);const r=i("div",["card-inner"]),s=i("div",["card-front"]),a=i("div",["card-back"]),o=function(e,t){const n=document.createElement(e),r=document.createTextNode(t);return n.appendChild(r),n}("h2",e.toString());return a.appendChild(o),r.appendChild(s),r.appendChild(a),n.appendChild(r),n}(n,(n=>function(t,n){const r=t.currentTarget;r.disabled=!0,r.classList.add("selected");const s=[r,o],a=Number(r.innerText.trim());switch(n.cardSelected(a)){case e.PENDING:o=r;break;case e.FAILURE:l("failure",s),i=s,window.setTimeout((function(){d("selected",i),d("failure",i);for(const e of i)e&&(e.disabled=!1)}),1e3);break;case e.GAMEOVER:window.setTimeout((()=>{confirm("Restart the game?")&&location.reload()}),500);case e.SUCCESS:l("success",s),d("failure",s);break;default:console.error("Unknown play result in click handler.")}var i}(n,t)))));return n}(new t(t.generateRandomNumbers(5))),u=document.getElementById("cards-container");if(!u)throw Error("Cannot find cards container.");u.append(...c);
//# sourceMappingURL=index.c72c58ef.js.map
